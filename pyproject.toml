[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "hepunits"
description = "Units and constants in the HEP system of units"
readme = "README.rst"
requires-python = ">=3.8"
authors = [
    { name = "Eduardo Rodrigues", email = "eduardo.rodrigues@cern.ch" },
]
maintainers = [
    { name = "Scikit-HEP", email = "scikit-hep-admins@googlegroups.com" },
]
keywords = [
    "Constants",
    "HEP",
    "HEP system of units",
    "Units",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]
dynamic = ["version"]

[project.optional-dependencies]
all = [
    "pytest-cov>=2.8.0",
    "pytest>=6",
]
dev = [
    "pytest-cov>=2.8.0",
    "pytest>=6",
]
test = [
    "pytest-cov>=2.8.0",
    "pytest>=6",
]

[project.urls]
Homepage = "https://github.com/scikit-hep/hepunits"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/hepunits/_version.py"


[tool.pytest.ini_options]
minversion = "6.0"
junit_family = "xunit2"
testpaths = ["tests"]
filterwarnings = [
    "error",
]
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
]
xfail_strict = true
log_cli_level = "DEBUG"

[tool.check-manifest]
ignore = [
    "src/hepunits/_version.py",
    ".pre-commit-config.yaml",
    "noxfile.py",
]

[tool.mypy]
warn_unused_configs = true
python_version = "3.8"
files = ["src"]
strict = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.ruff.lint]
extend-select = [
    "B",           # flake8-bugbear
    "I",           # isort
    "ARG",         # flake8-unused-arguments
    "C4",          # flake8-comprehensions
    "EM",          # flake8-errmsg
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
]
ignore = [
  "ISC001",  # Conflicts with formatter
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "F403",
    "F405",
    "PLR2004", # Magic value in comparisons
    "PT013",   # Okay to import approx from pytest
    "T20",
]

[tool.repo-review]
ignore = [
    "RTD",    # ReadTheDocs
    "PY004",  # Has docs folder
]
